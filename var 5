#include <iostream>

// Итоговая версия рекурсивной функции для вычисления a^n
double power(double a, int n) {
    // Базовый случай: a^0 = 1
    if (n == 0) {
        return 1.0;
    }
    // Базовый случай: a^1 = a
    if (n == 1) {
        return a;
    }
    // Рекурсивный случай: если n четное, то используем a^(n/2) * a^(n/2)
    if (n % 2 == 0) {
        double halfPower = power(a, n / 2);
        return halfPower * halfPower;
    } else {
        // Если n нечетное, то a^n = a * a^(n-1)
        return a * power(a, n - 1);
    }
}

int main() {
    double a;
    int n;

    std::cout << "Введите число a: ";
    std::cin >> a;
    std::cout << "Введите натуральное число n: ";
    std::cin >> n;

    if (n < 0) {
        std::cout << "Ошибка: n должно быть натуральным числом (n >= 0)." << std::endl;
        return 1;
    }

    double result = power(a, n);
    std::cout << a << " в степени " << n << " равно " << result << std::endl;

    return 0;
}
